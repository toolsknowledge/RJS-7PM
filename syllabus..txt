1) Introduction to ReactJS

    => what is ReactJS

    => Angular / React / NodeJS / VueJS

    => Virtual DOM


2) Installation of ReactJS


3) Components in ReactJS

    => Functional Components / Stateless Components

    => Class Components / Stateful Components


4) Components Communications

    => Parent to Child Communications

    => Child to Parent Communications


5) Events in Components

    => click

    => double click

    => change

    => key events


6) Asynchronous Calls

        => axios

        => fetch


7) Spring Boot Integration


8) MERN Stack Development

    M - MongoDB

    E - ExpressJS

    R - ReactJS

    N - NodeJS

9) Hooks

    useState()

    useEffect()

    useCallBack()

    useRef()

    useContext()

    useSuspense()

    ---
    ---
    ---
    ---

10) Forms with Validations

        => formik

        => yup



11) Middlewares in ReactJS

        => Redux

        => Thunk

        => Saga


12) Project


13) Cloud Deployment

    => AWS Deployment

        CI / CD Process

    => Heroku Deployment


14) Single Page Applications

    => Routing

    => Routing Parameters

    => Protected Routes


15) Unit Test Cases


16) Token Based Authentication System

        JSON WEB TOKEN


17) Material UI


18) Debugging


19) WebPack


                                                    Introduction to ReactJS 
                                                    ************************
    => ReactJS is the JavaScript library.

    => ReactJS given by Facebook.

    => Current Version of ReactJS is 18.x

    => React Categorized into 2 flavours.

            1) ReactJS

            2) React Native

    => ReactJS used to develop the web Applications.

    => React Native used to implement the Hybrid Mobile Applications.

    => Visual Studio Code is the Suggestable IDE to Build ReactJS Applications.

    => VSCode Given by Microsoft and open source IDE.

    => npm is the tool, helps to install the ReactJS.

    => npm stands for node packaging manager.

    => npm present in NodeJS.

    => "create-react-app" is the tool, used to create the react applications.

    => we will develop ReactJS Applications in two ways.

            1) JSX

            2) TSX

    => JSX Stands for JavaScript and XML.

    => we will save JSX Files in two ways.

            1) .js extension

            2) .jsx extension

    => JavaScript is the Object Based Scripting Language.

    => JavaScript won't Support OOPS.

    => TSX Stands for TypeScript and XML.

    => TypeScript Supports OOPS.

    => tsc is the tool, used to convert the TypeScript to equalent JavaScript.

    => Babel is the tool, used to convert the XML to equalent JavaScript.

    => we will save TypeScript files in two ways.

            1) .ts extension

            2) .tsx extension



Software Installation
=====================

1) download and install "NodeJS"

        => npm

        => npx

        => node

        ---
        ---
        ---

        npm stands for "node packaging manager"

        npm used to "install" the ReactJS.

        npx stands for "node packaging runner".

        npx creates the environment to create the "react application".

        node tool, helps to execute the "JavaScript".


    website : https://nodejs.org/en/

    file    : node-v16.6.1-x64.msi




2) install "create-react-app" tool

    - "create-react-app" tool provided by "Facebook".

    - "create-react-app" tool, used to create the react applications.

    - we will install "create-react-app" tool by using "npm" tool


    > npm install -g create-react-app

    "-g" stands for global Installation.




3) install Visual Studio Code


website : https://code.visualstudio.com/docs/?dv=win

file    : VSCodeUserSetup-x64-1.58.2.exe



4) install yarn tool.

    yarn tool given by Facebook

    yarn tool, used to download the 3rd party libraries.

    we will install yarn tool by using following command

    > npm install -g yarn


































